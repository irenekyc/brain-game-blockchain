{"version":3,"sources":["components/count-down/CountDown.jsx","constants/index.js","context/BrainGameContext.js","components/brain-icon/BrainIcon.jsx","components/card/Card.jsx","components/result-banner/ResultBanner.jsx","widgets/game-cards-container/GameCardsContainer.jsx","widgets/game/Game.js","helpers/currencies.js","App.js","components/nav-bar/Navbar.jsx","components/footer/Footer.jsx","components/layout/Layout.jsx","index.js"],"names":["currentIntervalId","CONTENT_ABOUT","TOKEN_REWARD","easy","medium","hard","TRANSFER_PROGRESS_PENDING","TRANSFER_PROGRESS_NULL","BrainGameContext","createContext","BrainGameContextProvider","children","useState","undefined","currentAccount","setCurrentAccount","hasMetaMask","setHasMetaMask","contractInstance","setContractInstance","isCorrectNetwork","setIsCorrectNetwork","web3Instance","setWeb3Instance","userTokenBalance","setUserTokenBalance","warning","setWarning","transferSucceed","setTransferSucceed","transferProgress","setTransferProgress","loadContract","a","web3","Web3","window","currentProvider","eth","net","getId","networkId","contractData","Contract","networks","address","contract","abi","useEffect","ethereum","loadBalance","methods","getBalanceOf","call","tokenBalance","utils","fromWei","switchChainId","request","method","params","chainId","then","catch","error","console","log","transferToken","tokenAmount","claimReward","send","from","on","reloadBalance","connectMetaMask","accounts","gameReset","Provider","value","stopClock","clearInterval","CountDown","countDown","goToNextStep","shouldStopClock","gameStep","withText","internalCountDown","setInternalCountDown","countdownFrom","setInterval","BrainIcon","color","version","xmlns","viewBox","preserveAspectRatio","transform","fill","stroke","d","Card","id","currency","isFliped","isDisabled","onClickSelect","isCardActive","setIsCardActive","classNames","className","onClick","src","alt","ResultBanner","result","difficultyLevel","useContext","GameCardsContainer","currenciesList","showResult","gameRestart","renderList","setRenderList","userSelectedPair","setUserSelectedPair","correctedPairs","setCorrectedPairs","list","forEach","copy1","currencyName","copy2","push","shuffledList","map","sort","Math","random","b","length","currencyOne","split","currencyTwo","prevState","setTimeout","includes","gameTimes","difficultyLevelNumber","Game","stopGame","setGameStep","setCurrenciesList","setDifficultyLevel","selectDifficultyLevel","e","level","target","getAttribute","numOfCurrencies","randomIds","drawedCurrencies","i","totalNumOfCurrencies","currenciesData","drawedNumber","floor","getCurrenciesList","renderHeading","App","content","setContent","NavBar","width","height","Identicon","toString","slice","process","Footer","Layout","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.db16a007.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nlet currentIntervalId;\n\nconst stopClock = () => {\n  if (currentIntervalId) {\n    clearInterval(currentIntervalId);\n  }\n};\n\nconst CountDown = ({\n  countDown,\n  goToNextStep,\n  shouldStopClock,\n  gameStep,\n  withText = false,\n}) => {\n  const [internalCountDown, setInternalCountDown] = useState(countDown);\n\n  useEffect(() => {\n    stopClock();\n    if (!countDown) return;\n    let countdownFrom = countDown;\n    setInternalCountDown(countDown);\n    currentIntervalId = setInterval(() => {\n      countdownFrom--;\n      setInternalCountDown(countdownFrom);\n      if (countdownFrom < 0) {\n        clearInterval(currentIntervalId);\n        goToNextStep();\n      }\n    }, 1000);\n  }, [countDown, goToNextStep]);\n\n  useEffect(() => {\n    if (shouldStopClock) {\n      stopClock();\n    }\n  }, [shouldStopClock]);\n\n  return (\n    <span>\n      {internalCountDown <= 0\n        ? `${gameStep === 4 || gameStep === 5 ? \"Times Up!\" : \"Start\"}`\n        : `${withText ? \"Time left: \" : \"\"}${internalCountDown} ${\n            withText ? \"s\" : \"\"\n          }`}\n    </span>\n  );\n};\n\nexport default CountDown;\n","export const WON = \"WON\";\nexport const LOST = \"LOST\";\n\nexport const CONTENT_ABOUT = \"CONTENT_ABOUT\";\nexport const CONTENT_GAME = \"CONTENT_GAME\";\n\nexport const TOKEN_REWARD = {\n  easy: 1,\n  medium: 5,\n  hard: 10,\n};\n\nexport const TRANSFER_PROGRESS_PENDING = \"TRANSFER_PROGRESS_PENDING \";\nexport const TRANSFER_PROGRESS_NULL = \"TRANSFER_PROGRESS_NULL\";\nexport const TRANSFER_PROGRESS_SUCCEED = \"TRANSFER_PROGRESS_SUCCEED\";\nexport const TRANSFER_PROGRESS_FAIL = \"TRANSFER_PROGRESS_FAIL\";\n","import { createContext, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport Contract from \"../contracts/BrainGame.json\";\nimport {\n  TRANSFER_PROGRESS_PENDING,\n  TRANSFER_PROGRESS_NULL,\n} from \"../constants\";\n\nexport const BrainGameContext = createContext();\nexport const BrainGameContextProvider = ({ children }) => {\n  const [currentAccount, setCurrentAccount] = useState(undefined);\n  const [hasMetaMask, setHasMetaMask] = useState(false);\n  const [contractInstance, setContractInstance] = useState(undefined);\n  const [isCorrectNetwork, setIsCorrectNetwork] = useState(undefined);\n  const [web3Instance, setWeb3Instance] = useState(undefined);\n  const [userTokenBalance, setUserTokenBalance] = useState(0);\n  const [warning, setWarning] = useState(null);\n  const [transferSucceed, setTransferSucceed] = useState(false);\n  const [transferProgress, setTransferProgress] = useState(\n    TRANSFER_PROGRESS_NULL\n  );\n\n  // check and load contractInstance\n  const loadContract = async () => {\n    const web3 = new Web3(window.web3.currentProvider);\n    window.web3 = web3;\n    setWeb3Instance(web3);\n    const networkId = await web3.eth.net.getId();\n\n    const contractData = Contract.networks[networkId];\n\n    if (contractData) {\n      const address = contractData.address;\n      // https://web3js.readthedocs.io/en/v1.7.0/web3-eth-contract.html#eth-contract\n      const contract = new web3.eth.Contract(Contract.abi, address);\n      setContractInstance(contract);\n      setIsCorrectNetwork(networkId !== address);\n    }\n  };\n\n  useEffect(() => {\n    // check if browser has etherum\n    if (typeof window.ethereum !== \"undefined\") {\n      setHasMetaMask(true);\n      loadContract();\n    } else {\n      setWarning(\n        \"MetaMask is not installed. Please install MetaMask to proceed\"\n      );\n      setHasMetaMask(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const loadBalance = async () => {\n      if (contractInstance && currentAccount) {\n        let tokenBalance = await contractInstance.methods\n          .getBalanceOf(currentAccount)\n          .call();\n        tokenBalance = Web3.utils.fromWei(tokenBalance, \"ether\");\n        setUserTokenBalance(tokenBalance);\n      }\n    };\n    if (!contractInstance || !currentAccount || !web3Instance) return;\n    loadBalance();\n  }, [contractInstance, currentAccount, web3Instance]);\n\n  // check and prompt correct network\n  const switchChainId = async () => {\n    window.ethereum\n      .request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x4\" }],\n        // rinkeby test network\n      })\n      .then(() => loadContract())\n      .catch((error) => console.log(error));\n  };\n\n  const transferToken = async (tokenAmount) => {\n    if (contractInstance && currentAccount) {\n      contractInstance.methods\n        .claimReward(tokenAmount)\n        .send({\n          from: currentAccount,\n        })\n        .on(\"transactionHash\", () =>\n          setTransferProgress(TRANSFER_PROGRESS_PENDING)\n        )\n        .then(() => {\n          reloadBalance();\n          setTransferProgress(TRANSFER_PROGRESS_NULL);\n        })\n        .catch(() => setTransferProgress(TRANSFER_PROGRESS_NULL));\n    }\n  };\n\n  const connectMetaMask = async () => {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    setCurrentAccount(accounts[0]);\n  };\n\n  const reloadBalance = async () => {\n    if (contractInstance && currentAccount) {\n      let tokenBalance = await contractInstance.methods\n        .getBalanceOf(currentAccount)\n        .call();\n      tokenBalance = Web3.utils.fromWei(tokenBalance, \"ether\");\n      setUserTokenBalance(tokenBalance);\n    }\n  };\n\n  const gameReset = async () => {\n    setTransferSucceed(undefined);\n  };\n\n  return (\n    <BrainGameContext.Provider\n      value={{\n        currentAccount,\n        hasMetaMask,\n        contractInstance,\n        switchChainId,\n        transferToken,\n        connectMetaMask,\n        userTokenBalance,\n        isCorrectNetwork,\n        warning,\n        transferSucceed,\n        gameReset,\n        transferProgress,\n      }}\n    >\n      {children}\n    </BrainGameContext.Provider>\n  );\n};\n","const BrainIcon = ({ color = \"#fff\" }) => {\n  return (\n    <svg\n      version=\"1.0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 1280.000000 1090.000000\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <g\n        transform=\"translate(0.000000,1090.000000) scale(0.100000,-0.100000)\"\n        fill={color}\n        stroke=\"none\"\n      >\n        <path\n          d=\"M6335 10893 c-81 -7 -252 -35 -323 -53 -69 -17 -78 -17 -165 -2 -71\n13 -155 17 -362 17 -235 -1 -286 -4 -395 -23 -156 -28 -297 -63 -425 -107 -95\n-32 -104 -33 -180 -25 -131 15 -442 12 -572 -5 -488 -64 -911 -248 -1278 -556\nl-81 -67 -80 5 c-103 7 -196 -9 -300 -52 -243 -101 -521 -321 -834 -660 -164\n-177 -431 -429 -523 -492 -133 -92 -241 -207 -345 -368 -56 -86 -160 -302\n-197 -410 -16 -44 -61 -141 -102 -216 -41 -75 -90 -181 -110 -235 -32 -88 -36\n-112 -41 -220 -5 -137 6 -185 59 -269 l31 -48 -41 -87 c-77 -162 -89 -326 -38\n-510 62 -220 159 -387 386 -661 29 -36 41 -62 50 -110 27 -139 98 -306 182\n-430 255 -375 763 -656 1423 -784 72 -14 134 -29 137 -33 3 -4 14 -27 23 -51\n22 -58 65 -118 136 -194 54 -59 58 -66 69 -134 6 -39 15 -83 21 -98 5 -14 10\n-70 10 -123 0 -90 3 -103 34 -169 60 -126 176 -233 401 -373 55 -34 159 -106\n230 -160 305 -230 613 -381 940 -461 219 -53 296 -60 726 -62 387 -2 397 -1\n574 26 99 15 248 41 330 57 83 17 159 30 171 30 15 0 26 -13 43 -54 34 -82\n139 -262 203 -346 80 -106 218 -249 322 -333 79 -64 97 -85 159 -187 225 -369\n592 -1044 681 -1255 94 -220 144 -303 250 -413 77 -81 167 -139 263 -171 75\n-25 120 -26 235 -5 135 25 170 64 169 188 0 91 -23 173 -122 454 -118 331\n-136 402 -106 402 6 0 50 -9 97 -21 237 -56 327 -69 496 -69 91 0 229 -7 307\n-16 228 -26 425 -15 662 34 351 74 507 119 693 201 380 168 677 466 732 736\n10 47 22 70 56 108 59 66 90 135 110 247 18 97 16 124 -23 288 -5 21 -3 22 73\n22 399 2 698 89 945 274 418 315 656 917 676 1711 6 239 -16 729 -43 965 -54\n470 -161 811 -322 1026 -49 65 -66 99 -97 194 -103 316 -287 601 -462 716 -45\n30 -87 63 -93 74 -5 10 -10 45 -10 77 0 187 -97 466 -228 654 -120 172 -320\n367 -485 474 -40 26 -94 61 -121 78 -42 28 -52 41 -71 94 -34 94 -80 164 -190\n287 -56 61 -133 154 -171 206 -89 120 -136 174 -248 279 -322 303 -824 550\n-1401 691 -102 24 -230 65 -320 100 -328 129 -587 180 -925 185 l-205 3 -95\n45 c-179 86 -391 145 -601 167 -89 9 -285 11 -374 3z m529 -102 c110 -23 296\n-78 311 -92 5 -5 -3 -9 -21 -9 -39 0 -160 -34 -229 -65 -41 -18 -86 -53 -158\n-123 -103 -100 -165 -146 -210 -157 -22 -6 -28 0 -57 49 -78 138 -212 259\n-364 332 l-89 42 39 10 c21 6 73 15 114 21 41 6 86 13 100 15 14 3 124 3 245\n1 172 -3 242 -8 319 -24z m-1244 -11 c0 -5 -6 -10 -13 -10 -7 0 -54 -20 -104\n-44 -93 -45 -128 -74 -225 -186 l-56 -65 -79 82 c-92 95 -137 120 -244 129\n-51 5 -67 10 -54 15 35 14 256 57 355 68 171 20 420 26 420 11z m364 -96 c122\n-32 233 -99 338 -207 60 -62 77 -89 167 -272 84 -169 107 -208 138 -231 21\n-15 42 -31 47 -35 5 -5 1 -20 -9 -36 -31 -49 -156 -203 -165 -203 -4 0 -10 23\n-12 50 -6 63 -20 79 -188 211 -69 54 -159 126 -200 159 -67 54 -161 109 -243\n139 -26 10 -29 9 -43 -24 -7 -19 -14 -37 -14 -40 0 -2 40 -25 89 -49 49 -25\n131 -79 182 -121 52 -42 139 -111 195 -154 139 -109 137 -107 131 -158 -8 -71\n-63 -146 -249 -339 -166 -172 -181 -191 -222 -277 -42 -87 -89 -219 -119 -332\nl-13 -50 -48 75 c-63 96 -167 235 -250 333 -58 66 -69 76 -86 67 -10 -6 -21\n-14 -24 -19 -3 -5 44 -74 106 -153 109 -140 232 -317 225 -324 -6 -6 -139 41\n-193 69 -28 14 -88 51 -134 82 -78 54 -82 56 -101 39 -33 -30 -33 -31 89 -115\n74 -51 205 -119 230 -119 39 0 84 -35 118 -93 20 -34 42 -66 49 -72 11 -9 25\n-100 52 -335 l5 -45 -37 54 c-21 30 -57 96 -81 148 -24 51 -48 93 -54 93 -6 0\n-20 -5 -30 -10 -19 -10 -19 -12 6 -78 33 -88 74 -160 144 -252 32 -42 66 -91\n76 -110 11 -20 29 -45 40 -56 12 -12 23 -27 26 -34 5 -17 67 -3 75 16 3 8 -13\n78 -36 157 -52 182 -60 222 -72 392 -13 190 0 304 50 455 68 202 95 246 255\n408 135 138 145 145 266 209 69 36 170 92 225 123 55 32 183 103 283 159 l184\n102 54 -11 c78 -16 173 -68 296 -160 l108 -81 -21 -42 c-12 -23 -60 -103 -107\n-177 -200 -317 -377 -530 -440 -530 -24 0 -173 76 -322 164 l-95 56 -18 -22\nc-10 -11 -16 -25 -14 -31 4 -13 114 -79 278 -167 l136 -73 43 -101 c55 -129\n56 -179 10 -356 -27 -103 -33 -149 -37 -260 l-4 -135 31 -52 c31 -55 44 -62\n73 -40 16 11 15 16 -11 72 -28 59 -29 63 -21 170 5 69 21 164 45 259 35 142\n37 154 26 216 -6 36 -25 100 -43 142 l-31 78 85 85 c131 131 309 375 452 622\n37 65 63 99 70 94 5 -5 72 6 150 25 328 78 406 88 680 88 241 0 254 -1 350\n-27 121 -33 216 -78 423 -198 220 -129 278 -155 407 -179 150 -27 258 -57 330\n-90 33 -16 91 -42 130 -60 223 -101 459 -305 750 -650 76 -91 182 -214 234\n-275 52 -60 126 -153 164 -205 77 -105 164 -200 184 -200 7 0 22 15 33 32 l20\n33 -49 50 c-26 27 -80 93 -118 145 -65 89 -236 293 -496 594 -229 264 -467\n459 -689 567 l-48 23 0 63 c0 37 -9 90 -22 130 -19 59 -32 78 -97 144 -46 46\n-121 106 -191 151 -232 150 -417 236 -665 309 -180 53 -336 112 -605 228 -103\n45 -178 71 -200 71 -119 0 -389 -148 -445 -244 -13 -23 -37 -95 -54 -161 -17\n-66 -41 -140 -54 -165 l-22 -45 -90 -5 c-81 -5 -93 -3 -121 17 -261 184 -297\n197 -623 228 -84 8 -156 17 -159 19 -19 20 152 190 235 234 66 35 180 67 347\n98 96 18 122 32 98 56 -12 12 -58 5 -252 -38 -195 -44 -308 -113 -438 -268\n-59 -70 -65 -74 -87 -64 -14 6 -38 32 -54 57 -32 50 -81 150 -81 166 0 6 28\n26 62 45 34 19 112 83 173 141 93 88 123 110 180 133 38 15 89 30 114 32 25 3\n206 1 401 -5 275 -8 381 -15 473 -30 211 -37 420 -98 582 -171 39 -17 144 -50\n235 -72 303 -73 518 -147 765 -261 406 -187 694 -416 915 -727 30 -41 88 -111\n130 -155 122 -128 183 -223 205 -320 11 -50 12 -50 116 -113 404 -245 674\n-587 748 -949 11 -54 25 -145 31 -202 6 -57 15 -110 21 -117 6 -7 36 -27 67\n-45 31 -18 77 -48 101 -68 45 -37 145 -160 198 -246 72 -114 171 -344 203\n-473 6 -23 31 -67 56 -97 140 -173 228 -398 294 -750 35 -191 70 -555 70 -735\nl0 -85 -22 35 c-11 19 -51 100 -87 180 l-66 145 17 130 c19 148 23 428 7 525\n-17 106 -39 169 -72 207 -50 57 -199 184 -211 180 -6 -2 -43 45 -83 105 -76\n114 -176 246 -433 568 -318 399 -422 546 -466 662 -114 302 -234 480 -416 616\n-219 165 -557 246 -826 198 -84 -14 -79 -18 -84 71 -4 53 -10 71 -44 120 -84\n123 -344 356 -768 686 -141 110 -151 116 -168 100 -10 -9 -18 -22 -18 -29 0\n-6 98 -90 218 -185 444 -355 625 -519 685 -621 62 -107 16 -251 -138 -431\nl-58 -68 21 -22 22 -22 60 60 c32 33 84 101 113 150 l54 90 64 19 c50 14 98\n19 214 19 133 0 161 -3 250 -27 538 -147 757 -498 920 -1476 43 -262 63 -345\n126 -523 55 -157 58 -187 30 -324 -28 -134 -83 -233 -196 -351 -111 -117 -189\n-181 -372 -306 -190 -130 -213 -157 -414 -496 -161 -271 -395 -521 -644 -687\n-96 -64 -238 -205 -233 -231 2 -8 11 -20 20 -26 14 -9 32 4 105 75 48 47 138\n119 198 159 77 52 149 113 240 205 173 172 271 298 390 496 185 309 204 331\n370 442 162 108 273 198 376 304 161 166 219 282 243 486 l13 108 -43 122\nc-71 197 -92 280 -129 502 -19 116 -47 268 -61 338 -14 70 -24 132 -22 137 2\n6 91 -101 198 -237 474 -600 533 -679 587 -781 30 -57 33 -72 33 -145 0 -111\n-23 -242 -64 -375 -67 -211 -92 -410 -57 -445 5 -5 20 -7 33 -4 23 6 24 10 26\n99 1 93 22 195 86 403 24 81 46 223 46 305 0 80 10 80 98 -6 89 -87 95 -100\n114 -244 15 -117 4 -405 -22 -570 -25 -165 -27 -281 -6 -379 20 -90 20 -91 57\n-91 34 0 34 3 15 97 -22 107 -28 163 -18 163 12 0 135 -261 174 -369 l31 -83\n-6 -217 c-6 -245 -32 -451 -83 -656 -34 -136 -121 -385 -134 -385 -4 0 -11 15\n-14 34 -5 24 -32 63 -90 128 -46 51 -93 101 -104 112 l-21 19 50 56 c64 71\n102 128 178 269 34 62 84 147 112 189 27 42 48 81 46 86 -2 6 -12 16 -23 24\n-19 12 -24 8 -76 -65 -30 -43 -81 -128 -113 -188 -74 -139 -120 -207 -192\n-285 l-58 -62 -12 169 c-7 116 -20 207 -38 285 -32 132 -104 348 -141 421 -14\n27 -23 52 -21 55 3 2 94 20 203 39 109 18 202 38 207 43 5 5 6 18 2 30 -9 29\n-38 28 -268 -12 -170 -28 -214 -32 -382 -32 -104 0 -207 4 -227 8 -36 8 -37 8\n-73 118 -62 185 -207 452 -288 527 -23 22 -25 22 -46 5 l-23 -19 74 -105 c84\n-120 131 -206 182 -337 93 -234 114 -463 77 -842 -47 -485 -47 -503 -2 -498\n30 3 25 -31 67 433 21 225 25 325 22 450 -3 88 -8 167 -12 175 -5 13 24 15\n230 15 161 0 230 -3 219 -10 -48 -29 -48 -26 -14 -105 103 -243 159 -481 159\n-681 0 -181 -14 -221 -128 -382 -87 -122 -98 -160 -86 -301 13 -147 9 -208\n-19 -330 -14 -59 -23 -114 -21 -121 4 -8 -23 -23 -79 -43 -152 -55 -326 -82\n-530 -82 l-129 0 16 23 c67 92 68 159 7 282 -41 83 -45 87 -184 199 -78 63\n-172 145 -208 183 -85 87 -239 272 -239 287 0 6 48 35 108 65 186 92 552 321\n552 344 -1 22 -28 49 -42 41 -7 -4 -74 -47 -149 -95 -200 -128 -336 -204 -463\n-259 -297 -127 -576 -178 -827 -150 -82 9 -114 9 -117 1 -5 -16 -28 -14 -70 8\n-56 28 -114 38 -387 71 -810 95 -945 103 -1280 75 -340 -28 -431 -20 -605 56\n-90 40 -123 50 -152 46 -46 -6 -124 -46 -269 -137 -235 -147 -308 -170 -546\n-170 -160 0 -282 16 -487 64 -121 29 -195 33 -252 12 -22 -7 -82 -41 -134 -75\n-148 -96 -178 -105 -350 -105 -80 -1 -172 1 -205 4 -59 5 -60 5 -63 -22 -5\n-44 28 -51 233 -52 219 -1 246 6 400 101 61 38 123 74 138 81 43 19 102 14\n232 -17 216 -52 318 -64 529 -59 256 6 268 11 590 207 66 41 139 80 162 88 42\n14 43 14 156 -35 62 -27 143 -54 179 -61 88 -15 246 -14 464 4 276 22 377 19\n791 -25 635 -68 759 -86 831 -120 78 -36 164 -116 198 -183 22 -46 25 -63 25\n-170 l0 -118 33 3 32 3 3 125 c3 121 2 126 -27 185 -17 33 -46 77 -66 97 -19\n20 -35 38 -35 41 0 2 60 2 133 -1 194 -6 320 14 595 93 34 10 63 16 65 14 185\n-237 285 -342 467 -489 133 -107 148 -123 178 -183 44 -90 45 -164 3 -200 -25\n-21 -44 -26 -127 -32 -177 -13 -393 -3 -519 25 -22 5 -139 16 -260 25 -275 19\n-380 30 -625 61 -183 24 -212 25 -470 19 -315 -7 -320 -7 -710 76 l-245 51\n-250 2 c-137 0 -374 -3 -525 -8 -184 -6 -364 -5 -545 3 -406 17 -619 -3 -855\n-82 -104 -35 -298 -76 -565 -119 -129 -21 -171 -23 -555 -23 -445 0 -482 3\n-705 55 -171 41 -308 90 -480 175 -148 72 -351 193 -341 202 2 3 29 -4 59 -15\n178 -67 356 -67 598 -1 l76 21 149 -47 c214 -68 279 -102 387 -204 56 -53 57\n-54 77 -36 11 10 20 24 20 30 0 18 -105 113 -176 160 -41 27 -120 61 -259 108\n-278 95 -353 133 -441 221 -98 99 -133 182 -134 313 0 132 40 272 152 530 l70\n163 42 10 c22 6 51 15 64 20 14 6 79 8 160 4 l137 -6 203 51 c112 28 209 51\n217 51 10 0 15 -11 15 -35 0 -48 31 -121 111 -261 l69 -121 0 -99 c0 -55 3\n-109 6 -121 4 -15 27 -33 68 -53 74 -36 233 -77 246 -64 5 5 11 24 12 42 l3\n34 -112 32 c-62 18 -115 35 -118 38 -3 2 -8 54 -12 113 l-6 109 -60 106 c-74\n130 -117 219 -117 244 0 10 39 60 86 112 79 86 90 94 123 94 20 0 140 -14 266\n-31 306 -40 459 -47 545 -25 39 10 190 79 380 174 185 93 339 164 373 172 54\n13 65 12 175 -14 155 -37 273 -42 623 -26 159 7 292 10 294 8 3 -2 16 -44 30\n-94 31 -105 68 -174 125 -229 33 -32 44 -38 58 -29 30 19 26 45 -16 88 -49 50\n-76 103 -98 191 -20 81 -14 89 63 80 63 -6 119 -30 240 -101 192 -113 313\n-136 590 -114 l166 13 28 -34 c39 -47 89 -132 103 -174 7 -20 17 -40 23 -46\n12 -12 58 -2 71 14 17 22 -17 103 -88 212 l-71 107 58 66 c32 37 110 119 173\n182 106 106 127 122 261 197 80 45 226 136 325 201 166 110 190 130 329 273\n227 234 251 269 355 529 51 127 94 225 105 238 1 1 31 -15 66 -36 35 -21 116\n-66 179 -100 68 -36 156 -94 214 -142 55 -44 104 -80 110 -80 6 0 17 10 25 22\n13 21 11 25 -30 61 -113 99 -183 149 -294 207 -158 83 -225 126 -225 145 0 8\n31 66 69 127 151 248 194 370 171 483 -8 38 -47 113 -137 266 -69 117 -151\n260 -183 318 -62 112 -68 117 -118 85 l-22 -14 31 -63 c18 -34 92 -164 165\n-289 185 -316 177 -298 172 -382 -7 -89 -27 -136 -154 -347 -111 -186 -155\n-277 -247 -507 -82 -203 -116 -252 -321 -457 -142 -142 -180 -173 -321 -266\n-88 -59 -214 -137 -280 -174 -172 -98 -221 -133 -300 -216 -205 -214 -292\n-302 -307 -310 -33 -18 -264 -31 -352 -20 -110 13 -171 36 -308 113 -63 36\n-137 73 -164 83 -27 10 -53 22 -57 26 -5 4 16 25 46 47 68 51 118 108 162 189\n47 86 52 109 26 123 -29 15 -35 10 -77 -70 -68 -130 -144 -196 -294 -257 -94\n-38 -113 -40 -447 -53 -300 -11 -383 -6 -555 35 -98 23 -108 23 -164 10 -77\n-19 -74 -19 -74 15 0 45 99 229 209 390 214 311 290 426 300 453 10 25 8 29\n-16 40 -30 13 -17 28 -136 -153 -46 -69 -121 -179 -169 -245 -89 -124 -193\n-298 -229 -382 -11 -26 -24 -74 -27 -107 l-7 -59 -290 -147 c-328 -166 -360\n-177 -508 -166 -128 9 -477 55 -504 66 -37 15 -76 80 -158 260 -66 142 -82\n170 -100 170 -56 0 -49 -26 76 -289 32 -68 59 -128 59 -132 0 -5 -9 -9 -21 -9\n-40 0 -88 -32 -133 -90 -53 -68 -46 -65 -341 -142 -190 -49 -206 -52 -325 -52\n-362 1 -587 150 -729 484 -18 41 -33 76 -35 77 -9 10 -56 -19 -56 -34 0 -10\n23 -65 50 -122 28 -57 49 -106 47 -108 -2 -2 -94 44 -203 102 -109 58 -205\n105 -212 105 -7 0 -17 -10 -21 -22 -12 -29 -10 -30 174 -130 83 -45 191 -105\n242 -135 51 -29 100 -53 111 -53 10 0 29 -12 43 -26 34 -36 156 -117 212 -140\n26 -10 47 -22 47 -25 0 -3 -25 -16 -56 -28 -80 -30 -159 -86 -208 -147 -24\n-29 -92 -147 -151 -263 -99 -193 -112 -213 -151 -239 -48 -29 -51 -38 -30 -68\n14 -19 15 -19 51 0 61 33 97 84 198 283 53 105 114 213 135 240 39 48 118 111\n128 101 3 -3 -26 -82 -65 -174 -86 -207 -110 -298 -118 -434 -9 -168 28 -276\n133 -389 46 -50 147 -127 189 -145 23 -10 -23 -25 -126 -41 -192 -31 -308 -11\n-534 92 -66 30 -128 52 -138 49 -22 -5 -236 124 -343 208 -99 78 -178 178\n-201 255 -13 45 -14 68 -6 116 8 47 7 66 -3 87 -8 15 -21 71 -31 125 l-16 98\n-76 81 c-91 97 -135 176 -128 231 3 21 17 126 31 233 49 365 53 379 154 468\n197 173 807 595 1137 786 132 76 315 129 539 157 126 15 321 7 481 -22 102\n-18 144 -20 280 -15 366 13 483 48 661 195 78 65 111 85 163 102 65 20 222 38\n209 24 -4 -4 -40 -22 -81 -39 -139 -61 -271 -154 -432 -304 l-79 -74 -21 26\nc-24 30 -33 32 -60 12 -17 -13 -16 -17 27 -93 55 -95 88 -189 88 -254 0 -26\n-11 -95 -25 -153 -33 -138 -33 -138 7 -134 33 3 33 3 60 108 41 160 35 269\n-24 384 l-20 40 68 63 c208 191 354 289 512 342 107 36 255 71 304 71 83 0\n328 40 533 86 300 68 397 84 545 91 147 6 263 -5 394 -38 93 -24 136 -44 363\n-177 228 -134 250 -145 280 -137 47 11 183 159 183 199 0 13 -46 46 -64 46 -2\n0 -27 -31 -55 -69 -28 -38 -59 -72 -67 -75 -24 -9 -389 198 -389 220 0 6 43\n46 95 88 149 122 396 380 546 569 76 94 191 227 258 295 l120 122 -20 21 -21\n21 -59 -50 c-84 -70 -159 -153 -329 -363 -160 -198 -383 -429 -533 -552 -144\n-120 -117 -113 -278 -71 -125 32 -157 36 -309 41 -207 7 -272 -1 -598 -73\n-297 -66 -337 -73 -337 -65 0 3 29 26 63 51 88 64 202 175 253 246 82 115 115\n211 134 392 6 57 20 123 31 148 10 25 19 47 19 50 0 6 -58 34 -70 34 -26 0\n-59 -105 -74 -237 -24 -203 -63 -290 -190 -421 -89 -93 -192 -170 -303 -229\n-123 -66 -164 -73 -373 -66 -117 4 -193 2 -229 -6 -30 -6 -56 -10 -58 -8 -2 3\n8 48 22 102 49 188 33 260 -88 414 -53 66 -72 100 -93 165 -27 86 -103 256\n-113 256 -3 0 -12 -4 -19 -9 -11 -6 -3 -34 37 -130 27 -66 47 -121 44 -121 -3\n0 -32 25 -64 55 -32 30 -62 55 -67 55 -5 0 -17 -9 -26 -19 -18 -19 -14 -24\n121 -164 76 -79 156 -170 178 -201 58 -85 60 -161 4 -344 -10 -34 -16 -68 -13\n-75 3 -8 -5 -18 -18 -24 -13 -6 -70 -49 -128 -97 -144 -119 -218 -144 -500\n-167 -155 -12 -224 -9 -420 22 -145 22 -377 25 -512 5 -49 -7 -88 -10 -88 -7\n0 2 7 13 16 22 15 17 15 25 -5 111 -75 313 -117 588 -141 918 -20 283 -36 396\n-70 495 -25 71 -179 405 -196 424 -11 12 -18 12 -43 1 -17 -7 -31 -17 -31 -23\n0 -5 37 -89 81 -186 144 -311 149 -336 179 -801 16 -251 85 -676 138 -850 16\n-52 31 -101 33 -109 3 -10 -26 -23 -108 -46 -129 -37 -269 -103 -429 -203\nl-111 -70 -116 48 c-119 48 -137 60 -307 206 -98 84 -123 110 -225 233 -103\n126 -223 219 -517 400 -142 87 -221 146 -309 229 l-67 63 -27 -24 c-35 -30\n-29 -42 64 -130 67 -63 161 -128 473 -327 137 -87 249 -188 411 -373 38 -42\n126 -125 195 -184 100 -83 148 -116 227 -153 l99 -47 -64 -46 c-36 -25 -135\n-94 -220 -153 -85 -59 -216 -152 -290 -208 -207 -156 -207 -156 -243 -150\n-173 31 -560 159 -724 239 -107 53 -200 137 -248 225 -26 48 -30 64 -29 130 1\n63 9 96 48 204 25 71 53 157 60 190 52 221 17 460 -111 761 -45 105 -48 108\n-83 90 -16 -8 -31 -19 -35 -24 -3 -6 14 -57 39 -114 67 -157 99 -276 116 -433\n14 -132 0 -218 -71 -434 -58 -174 -61 -189 -57 -260 3 -59 11 -90 38 -143 18\n-37 31 -69 29 -71 -10 -9 -250 48 -297 70 -113 55 -346 314 -426 473 -62 121\n-71 167 -71 356 1 240 2 244 200 440 92 92 160 168 175 196 l23 46 -18 94\nc-26 139 -28 143 -71 136 -20 -4 -38 -8 -41 -10 -2 -2 4 -47 13 -99 9 -52 14\n-107 10 -121 -9 -38 -123 -157 -150 -157 -38 0 -197 102 -268 171 -48 47 -77\n86 -99 133 -29 61 -31 75 -31 169 1 64 6 118 16 145 42 118 193 367 295 487\n101 118 162 150 359 190 124 26 299 51 306 44 6 -6 -38 -192 -64 -269 -11 -34\n-39 -91 -62 -127 l-42 -66 25 -19 24 -20 27 32 c47 57 86 142 118 260 17 63\n45 157 62 208 38 118 189 423 260 524 120 173 348 403 497 503 120 79 148 88\n306 92 l140 5 112 -51 c123 -56 148 -60 208 -32 69 31 128 120 94 142 -27 17\n-47 9 -68 -26 -12 -21 -36 -42 -56 -50 -31 -14 -39 -13 -87 5 -87 33 -87 32\n-45 83 99 121 191 203 282 249 114 58 240 103 352 124 79 15 100 15 242 0 102\n-10 321 -17 634 -21 616 -8 651 -13 845 -121 l63 -35 -43 -42 c-24 -23 -68\n-78 -97 -122 -112 -164 -192 -262 -273 -336 -46 -41 -89 -79 -96 -83 -7 -4\n-63 21 -140 62 -70 38 -175 95 -234 126 -117 62 -247 146 -438 285 -116 84\n-126 89 -142 74 -33 -30 -35 -28 152 -165 199 -146 282 -198 493 -309 108 -57\n209 -113 224 -125 l26 -21 -39 -124 -39 -124 2 -302 1 -302 -79 68 c-160 138\n-314 229 -436 256 -37 9 -141 19 -231 22 l-163 6 -32 61 c-30 59 -31 66 -32\n186 0 69 4 203 9 298 l9 172 -30 0 c-30 0 -31 -2 -36 -57 -16 -150 -29 -405\n-25 -478 4 -61 12 -94 32 -133 28 -56 27 -72 -4 -72 -40 0 -188 -62 -252 -106\n-115 -78 -214 -200 -324 -399 l-38 -69 -17 99 c-30 169 -62 220 -261 420 -212\n212 -222 230 -274 493 -3 17 -11 22 -37 22 -18 0 -38 -5 -43 -10 -15 -15 0\n-116 31 -213 39 -124 84 -187 248 -347 197 -193 229 -244 247 -401 11 -96 -5\n-182 -55 -285 -28 -59 -46 -82 -88 -113 -75 -56 -109 -71 -211 -93 -107 -23\n-460 -36 -568 -21 -45 6 -71 6 -78 -1 -17 -17 -12 -73 8 -82 9 -4 121 -10 248\n-12 338 -6 492 22 637 117 63 41 86 65 145 148 38 54 113 175 167 268 124 216\n144 245 230 331 80 80 172 131 290 161 105 26 381 23 489 -6 218 -58 520 -312\n541 -455 4 -24 -1 -103 -10 -177 -10 -80 -15 -173 -13 -234 4 -89 8 -110 42\n-190 21 -49 41 -105 43 -123 3 -18 -10 -109 -28 -202 -18 -93 -30 -172 -27\n-175 3 -3 21 -8 41 -12 42 -6 38 -17 88 230 l33 164 -49 114 -50 114 0 115 c0\n63 6 164 14 223 12 85 12 123 4 180 -7 45 -11 215 -10 452 l2 380 35 96 35 97\n108 97 c104 95 166 170 307 373 l65 93 120 65 c132 71 273 167 282 191 3 8 -5\n25 -20 40 l-25 26 -116 -77 c-64 -43 -124 -78 -133 -79 -26 -1 -73 32 -73 53\n0 10 18 73 40 141 37 114 45 129 100 192 33 38 73 79 89 92 40 35 159 96 289\n150 61 26 114 50 116 54 8 13 -14 51 -29 51 -24 0 -230 -86 -305 -127 -36 -19\n-94 -58 -129 -85 -44 -35 -66 -47 -74 -39 -12 12 -2 29 82 133 68 85 124 125\n226 163 123 47 256 53 389 19z m-1222 -36 c3 -21 10 -24 88 -31 138 -13 157\n-21 232 -99 36 -38 90 -105 118 -148 l52 -80 -26 -30 c-16 -19 -42 -81 -67\n-161 -22 -71 -42 -129 -43 -129 -2 0 -37 16 -79 35 -42 19 -106 42 -142 50\n-99 23 -328 34 -730 35 -198 1 -380 5 -405 8 l-45 7 -3 70 c-2 58 1 78 21 118\n24 47 24 48 6 70 l-19 22 -29 -32 c-37 -40 -51 -88 -51 -176 l0 -68 -107 7\nc-155 9 -288 -20 -491 -110 -132 -57 -190 -100 -307 -223 l-111 -116 -174 -7\nc-139 -6 -186 -12 -227 -28 -165 -63 -456 -323 -640 -569 -67 -91 -156 -249\n-223 -401 -29 -64 -56 -121 -60 -125 -4 -5 -65 -17 -136 -27 -249 -37 -396\n-77 -477 -131 -140 -93 -404 -504 -443 -691 -20 -94 -12 -201 22 -283 14 -33\n27 -64 29 -70 2 -5 -14 -22 -35 -37 -22 -16 -52 -46 -68 -68 -15 -21 -32 -39\n-38 -40 -6 0 -22 24 -35 53 -20 43 -23 68 -23 152 0 152 36 259 159 475 30 52\n68 136 85 185 49 141 181 399 254 495 75 100 191 214 269 264 31 19 127 100\n214 181 87 80 169 148 183 151 63 14 198 58 230 74 19 10 105 91 190 181 287\n302 521 476 747 554 36 13 70 28 75 33 6 6 25 8 43 5 28 -4 40 2 96 52 271\n243 619 427 984 519 196 50 359 69 600 68 121 0 250 -5 287 -10 60 -7 73 -6\n140 19 91 34 106 35 110 7z m3778 -414 c293 -124 455 -185 608 -230 182 -52\n286 -94 442 -176 165 -86 304 -181 386 -263 59 -57 75 -81 88 -125 15 -49 22\n-130 12 -130 -3 0 -44 13 -93 29 -48 16 -150 41 -226 56 -165 31 -194 43 -413\n172 -211 125 -268 154 -370 186 -149 47 -244 60 -444 60 -194 0 -324 -14 -538\n-58 -64 -13 -118 -22 -120 -20 -2 2 4 17 12 34 9 17 32 89 51 161 42 158 54\n182 108 221 95 69 264 149 317 149 14 0 95 -30 180 -66z m-6255 -253 c-3 -6\n-39 -28 -80 -51 -173 -95 -346 -240 -576 -482 -84 -88 -164 -164 -178 -170\n-57 -23 -111 -37 -111 -28 0 5 72 83 160 174 275 282 504 454 714 537 82 33\n79 32 71 20z m4640 -77 c139 -10 140 -12 28 -76 -180 -103 -514 -288 -519\n-288 -3 0 37 48 88 108 52 59 122 144 157 190 l63 84 47 -6 c25 -3 87 -8 136\n-12z m-6508 -2704 c32 -27 97 -73 146 -101 l87 -51 -54 -59 c-98 -105 -126\n-196 -126 -397 1 -232 31 -332 153 -516 58 -87 115 -155 202 -242 145 -146\n206 -181 383 -218 63 -13 116 -27 119 -29 8 -8 -194 -103 -262 -123 -70 -20\n-184 -22 -269 -4 -61 12 -69 9 -80 -27 -6 -20 -1 -24 51 -39 36 -10 96 -17\n158 -18 119 -1 173 15 361 104 193 92 181 90 272 36 42 -26 119 -63 170 -82\n60 -24 96 -44 104 -58 14 -28 78 -105 150 -184 57 -62 58 -63 41 -88 -38 -59\n-163 -123 -240 -124 -48 0 -53 -2 -59 -25 -4 -14 -4 -29 0 -32 12 -13 115 -15\n149 -4 51 17 147 82 195 131 l41 43 64 -36 c35 -20 69 -43 76 -50 9 -11 7 -54\n-9 -188 -31 -266 -24 -243 -73 -235 -82 13 -314 67 -417 98 -344 102 -655 269\n-857 461 -196 187 -305 380 -353 624 -14 71 -22 84 -113 189 -148 170 -277\n401 -323 579 -22 87 -25 115 -21 215 5 129 26 201 90 301 19 30 42 71 50 90 8\n20 29 52 47 72 45 52 74 50 147 -13z m1654 -1888 c46 -16 125 -39 176 -51 l91\n-23 -29 -61 c-16 -34 -32 -63 -37 -65 -18 -6 -181 101 -234 154 -50 49 -68 74\n-55 74 2 0 41 -13 88 -28z m10250 -1677 c47 -49 91 -99 96 -110 6 -11 14 -56\n18 -100 l7 -80 -63 -95 c-75 -114 -253 -297 -354 -364 -85 -56 -97 -58 -84\n-13 34 117 41 199 29 336 -15 170 -14 173 109 349 85 121 135 177 150 170 3\n-2 45 -43 92 -93z m-5721 -837 c18 -46 83 -182 145 -303 62 -121 120 -245 129\n-275 8 -30 25 -124 36 -208 40 -293 89 -365 397 -577 153 -106 294 -193 445\n-275 l117 -64 11 -62 c6 -35 49 -172 96 -306 114 -323 144 -421 151 -495 12\n-122 -20 -145 -202 -147 -94 -1 -104 1 -168 32 -163 80 -276 217 -377 460 -58\n137 -322 648 -464 895 -305 530 -321 555 -416 627 -103 79 -224 201 -309 314\n-65 86 -171 266 -206 349 l-15 37 27 11 c101 39 285 66 459 68 l111 1 33 -82z\nm305 68 c66 -8 169 -17 229 -21 98 -5 128 -12 285 -65 288 -96 447 -122 830\n-136 162 -5 193 -4 189 7 -4 11 -58 16 -249 25 -274 12 -306 16 -471 50 -123\n26 -363 98 -372 113 -13 20 445 37 609 22 140 -13 413 -56 448 -71 26 -11 -10\n-9 -390 25 -299 27 -343 29 -343 16 0 -10 27 -14 389 -51 155 -15 285 -31 288\n-34 4 -3 -84 -6 -195 -6 -173 0 -202 -2 -202 -15 0 -13 45 -15 343 -15 188 0\n398 -5 466 -10 101 -8 128 -7 140 4 27 23 299 50 425 42 205 -13 244 -22 301\n-67 89 -71 160 -116 311 -200 299 -165 372 -231 504 -464 87 -153 123 -205\n135 -194 3 4 -38 85 -92 179 -148 261 -225 336 -488 480 -188 103 -356 213\n-344 225 3 2 34 0 69 -6 76 -12 289 -107 389 -173 76 -51 252 -229 358 -362\n79 -99 203 -308 203 -342 0 -22 25 -41 37 -28 4 4 1 23 -6 44 -18 48 -124 235\n-168 292 -80 105 -273 315 -336 366 -64 51 -196 134 -213 134 -4 0 -28 12 -53\n28 l-46 27 95 5 c66 4 102 1 117 -7 276 -156 355 -216 450 -337 75 -96 84\n-117 137 -311 45 -164 58 -196 69 -178 5 8 -36 181 -74 308 -52 173 -215 345\n-461 484 -32 18 -58 37 -58 42 0 7 21 8 53 5 176 -18 156 -11 263 -92 54 -42\n116 -92 137 -112 54 -52 122 -149 153 -218 24 -55 84 -334 84 -394 0 -48 -182\n-344 -220 -358 -5 -2 -66 22 -136 52 -185 81 -379 136 -337 96 4 -5 53 -23\n108 -41 90 -28 278 -105 314 -128 19 -12 4 -31 -55 -72 l-42 -29 -85 40 c-60\n27 -113 63 -182 122 -107 92 -125 104 -125 88 0 -14 112 -120 184 -174 28 -21\n77 -50 109 -64 31 -13 57 -28 57 -33 0 -5 -14 -16 -30 -24 -38 -19 -43 -18\n-263 69 -92 36 -213 79 -270 96 -174 50 -340 90 -345 85 -14 -14 30 -30 214\n-80 172 -47 482 -157 563 -200 l26 -13 -65 -30 c-134 -60 -123 -59 -251 -17\n-140 47 -451 201 -577 287 -151 102 -152 102 -152 85 0 -18 98 -91 223 -166\n112 -67 324 -169 452 -216 55 -20 104 -40 108 -45 16 -15 -179 -69 -343 -94\n-232 -36 -277 -39 -377 -31 -103 9 -89 17 62 34 104 12 322 64 339 81 23 23\n-10 20 -126 -8 -184 -46 -266 -56 -453 -56 -182 -1 -312 14 -590 65 -375 70\n-553 137 -721 270 -66 52 -85 75 -36 43 83 -54 124 -76 187 -98 223 -79 669\n-166 1002 -197 68 -6 218 -9 335 -7 202 4 217 6 291 32 42 15 77 32 77 37 0\n14 -29 11 -95 -10 -137 -43 -295 -48 -615 -20 -366 32 -900 144 -1053 221 -20\n10 -83 50 -139 88 -56 39 -107 70 -114 70 -12 0 -84 80 -84 94 0 3 20 6 45 6\n37 0 45 -3 45 -19 0 -14 24 -27 103 -58 156 -62 405 -141 577 -184 152 -38\n157 -39 345 -39 243 -1 345 -11 530 -55 175 -42 355 -58 355 -33 0 12 -20 16\n-98 21 -58 4 -173 24 -278 48 l-179 41 -250 2 c-232 2 -258 4 -360 28 -153 37\n-415 117 -574 177 -143 53 -175 71 -125 71 73 0 281 -25 674 -82 322 -46 463\n-62 582 -65 159 -5 228 0 228 17 0 6 -61 10 -149 10 -157 0 -226 8 -766 85\n-335 49 -496 65 -646 65 l-96 0 -86 110 c-79 100 -107 127 -107 101 0 -28 246\n-326 361 -436 226 -218 408 -292 949 -384 96 -17 205 -33 242 -37 41 -4 65\n-11 61 -17 -4 -6 -48 -7 -122 -3 -339 20 -691 112 -996 261 -178 88 -303 173\n-411 280 -108 107 -144 171 -144 254 0 70 -10 131 -21 131 -4 0 -10 -39 -11\n-87 l-3 -88 -34 85 c-39 97 -51 116 -51 78 0 -35 72 -231 125 -343 47 -97 94\n-159 171 -226 152 -132 463 -288 677 -339 98 -24 117 -25 117 -6 0 9 -17 16\n-47 21 -116 17 -332 100 -495 190 -129 72 -209 128 -271 192 -59 60 -77 87\n-123 176 l-35 68 113 -114 c125 -124 211 -186 390 -278 212 -108 447 -189 712\n-245 108 -23 155 -27 431 -34 346 -9 514 -20 493 -30 -29 -17 -238 -42 -342\n-41 -61 0 -172 7 -246 15 -74 9 -208 16 -297 16 -172 0 -319 21 -523 75 -217\n57 -740 367 -926 550 -110 108 -129 155 -164 405 -11 74 -22 151 -26 170 l-7\n35 61 -52 c74 -61 145 -97 250 -124 96 -25 282 -37 427 -28 61 3 112 5 114 3\n4 -4 -37 -23 -122 -58 -21 -9 -36 -20 -33 -25 4 -5 52 6 112 26 l106 36 61\n-17 c33 -9 164 -57 291 -105 321 -123 438 -155 736 -200 317 -48 402 -55 650\n-55 207 -1 268 3 395 22 181 28 231 40 218 53 -6 6 -72 0 -184 -16 -319 -49\n-587 -44 -1009 16 -313 44 -502 93 -759 193 -102 40 -224 85 -271 101 -47 15\n-89 31 -93 35 -5 4 29 13 75 20 46 6 175 27 288 45 113 18 210 30 215 25 6 -4\n57 -15 116 -23 58 -9 202 -39 320 -67 441 -105 413 -101 655 -107 266 -7 505\n3 531 22 15 11 -39 12 -317 8 -389 -6 -375 -8 -797 92 -150 36 -306 70 -348\n76 -41 6 -75 15 -75 19 0 13 243 40 365 40 140 0 234 -14 504 -74 242 -55 361\n-73 566 -86 206 -13 205 -13 205 5 0 10 -10 15 -30 15 -18 0 -33 6 -36 15 -3\n8 -76 86 -162 173 -206 207 -312 277 -533 347 -92 29 -344 85 -384 85 -51 0\n-22 -19 53 -35 287 -61 425 -105 555 -179 107 -61 184 -126 321 -271 l117\n-125 -79 0 c-150 0 -161 4 -264 92 -247 212 -288 232 -723 352 -267 75 -267\n75 -272 59 -5 -13 32 -26 280 -93 228 -62 375 -112 444 -152 66 -37 217 -154\n263 -203 l35 -37 -50 7 c-27 3 -162 31 -300 60 -300 64 -373 75 -513 75 -135\n0 -196 -8 -632 -80 -442 -72 -562 -84 -783 -77 -273 8 -383 47 -518 182 -66\n67 -89 95 -76 95 2 0 71 -14 153 -30 294 -60 473 -80 705 -80 230 0 535 29\n857 80 116 19 274 69 288 91 14 23 -10 20 -88 -10 -191 -72 -786 -139 -1143\n-128 -212 7 -358 25 -618 76 l-190 38 -18 34 c-10 19 -18 38 -19 43 0 18 173\n-5 440 -58 483 -97 686 -100 1040 -15 217 52 335 88 324 99 -5 5 -104 -14\n-234 -46 -317 -78 -388 -87 -600 -80 -186 5 -263 17 -595 86 -110 23 -240 44\n-290 47 -49 3 -97 9 -105 13 -17 9 -75 118 -67 126 3 3 61 -12 129 -34 479\n-156 909 -199 1393 -139 252 31 265 34 265 47 0 15 -50 12 -271 -16 -382 -50\n-740 -30 -1118 62 -123 30 -338 98 -397 126 -37 17 -64 51 -64 80 0 14 19 10\n405 -82 434 -104 567 -128 766 -142 204 -13 719 -2 719 16 0 8 -87 10 -337 8\n-466 -6 -543 4 -1143 148 -157 38 -314 74 -350 81 -73 13 -90 23 -90 50 0 17\n8 19 68 19 37 0 121 -6 187 -14z m1718 -123 c-7 -2 -21 -2 -30 0 -10 3 -4 5\n12 5 17 0 24 -2 18 -5z m1973 -113 c38 -15 222 -221 259 -292 30 -57 37 -83\n47 -177 8 -87 8 -120 -2 -156 -7 -25 -16 -47 -20 -50 -3 -2 -19 58 -33 133\n-45 230 -125 360 -307 505 l-75 59 55 -7 c30 -4 64 -11 76 -15z m419 -34 c8\n-19 26 -74 41 -123 24 -83 25 -92 13 -160 -6 -40 -15 -73 -18 -73 -3 0 -25 39\n-48 88 -24 48 -74 131 -113 184 -38 53 -70 99 -70 102 0 8 41 13 113 15 l68 1\n14 -34z m-231 8 c47 -47 164 -227 202 -312 24 -53 44 -102 44 -107 0 -15 -78\n-90 -86 -82 -4 3 -10 43 -15 88 -12 125 -47 186 -207 368 l-54 61 50 0 c33 0\n56 -6 66 -16z\"\n        />\n        <path\n          d=\"M8389 9090 c-49 -52 -100 -116 -119 -151 -32 -61 -33 -62 -25 -153\n15 -168 11 -265 -14 -336 -60 -172 -192 -410 -240 -434 -14 -7 -83 -30 -153\n-51 -137 -41 -141 -45 -116 -100 6 -14 17 -24 24 -21 7 3 32 10 56 16 271 71\n340 110 563 322 169 159 215 182 412 199 175 16 320 1 405 -42 87 -43 236\n-196 302 -307 124 -213 216 -549 216 -790 0 -88 20 -121 95 -157 41 -19 75\n-27 119 -28 l61 -2 3 41 3 41 -53 7 c-29 4 -72 16 -95 26 -39 17 -43 22 -43\n54 0 26 6 38 22 47 12 6 59 40 105 75 99 76 118 86 206 109 63 17 68 20 65 44\n-3 24 -6 26 -50 24 -77 -2 -143 -31 -244 -105 -52 -39 -97 -68 -99 -66 -3 2\n-14 58 -25 124 -60 351 -172 602 -358 795 -86 91 -160 143 -252 178 -62 24\n-74 25 -275 25 -199 -1 -214 -2 -290 -27 -109 -36 -158 -69 -297 -203 -66 -64\n-121 -114 -123 -112 -2 2 16 44 40 93 88 180 120 301 111 413 -3 43 -8 111\n-12 152 -7 95 7 123 128 254 83 89 86 94 72 115 -8 11 -20 21 -27 21 -6 0 -50\n-41 -98 -90z\"\n        />\n        <path\n          d=\"M5241 5270 l-32 -30 47 -56 c63 -74 74 -79 107 -48 31 29 31 30 -39\n107 l-50 57 -33 -30z\"\n        />\n        <path\n          d=\"M6645 4739 c-4 -6 -10 -62 -13 -124 -4 -90 -1 -122 13 -166 18 -56\n97 -178 140 -219 24 -23 25 -23 45 -5 11 10 20 21 20 25 0 3 -27 42 -60 86\n-89 117 -94 140 -86 369 1 36 -1 40 -26 43 -14 2 -29 -2 -33 -9z\"\n        />\n        <path\n          d=\"M3083 3685 c-3 -9 -4 -17 -2 -19 2 -1 65 -45 139 -96 74 -52 182\n-129 239 -172 57 -44 109 -77 115 -75 29 10 8 38 -79 107 -106 83 -379 270\n-395 270 -6 0 -13 -7 -17 -15z\"\n        />\n        <path\n          d=\"M7007 2113 c-3 -5 -2 -58 2 -118 6 -95 12 -119 40 -175 62 -126 91\n-124 33 2 -34 73 -40 98 -46 184 -7 92 -16 128 -29 107z\"\n        />\n        <path\n          d=\"M8416 2113 c-13 -14 -1 -23 112 -81 254 -130 344 -151 722 -162 654\n-21 778 -29 890 -54 58 -13 123 -31 144 -40 45 -19 66 -20 66 -5 0 15 -57 36\n-184 70 -120 31 -116 31 -936 58 -244 9 -286 13 -370 35 -122 33 -175 53 -319\n126 -65 32 -121 56 -125 53z\"\n        />\n        <path\n          d=\"M8230 2072 c0 -4 125 -70 278 -145 253 -125 285 -138 372 -154 111\n-19 438 -23 878 -9 231 8 272 11 272 24 0 13 -32 14 -262 6 -383 -13 -784 -9\n-888 10 -73 13 -121 33 -350 146 -246 121 -300 143 -300 122z\"\n        />\n        <path\n          d=\"M7110 1968 c1 -158 53 -264 211 -428 67 -70 78 -49 12 26 -141 162\n-181 234 -189 341 -7 99 -14 133 -24 133 -6 0 -10 -33 -10 -72z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default BrainIcon;\n","import \"./card.css\";\nimport { useEffect, useState } from \"react\";\nimport BrainIcon from \"../brain-icon\";\n\nconst Card = ({ id, currency, isFliped, isDisabled, onClickSelect }) => {\n  const [isCardActive, setIsCardActive] = useState(false);\n  useEffect(() => {\n    setIsCardActive(isFliped);\n  }, [isFliped]);\n  const classNames = `card ${isCardActive ? \"card--active\" : \"card--inactive\"}`;\n  return (\n    <div className=\"game__card__card-wrapper\">\n      <div\n        className={classNames}\n        onClick={() => !isDisabled && onClickSelect()}\n        id={id}\n        data-currency={currency}\n      >\n        <div className=\"card-inner\">\n          <div className=\"card-front\">\n            <BrainIcon color=\"#fff\" />\n          </div>\n          <div className=\"card-back\">\n            <img src={`./assets/crypto-icons/${currency}.svg`} alt={currency} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { WON, TOKEN_REWARD } from \"../../constants\";\nimport { BrainGameContext } from \"../../context/BrainGameContext\";\nimport { useContext } from \"react\";\n\nconst ResultBanner = ({ result, difficultyLevel }) => {\n  const { transferToken } = useContext(BrainGameContext);\n\n  return (\n    <div className=\"game__modal-results\">\n      <div className=\"container game__modal-results__content\">\n        {result === WON ? (\n          <>\n            <p> You Won!</p>\n            <button\n              onClick={() => transferToken(TOKEN_REWARD[difficultyLevel])}\n            >\n              Claim your prize\n            </button>\n          </>\n        ) : (\n          <>\n            <p>You Lost!</p>\n            <p>Come Again tomorrow</p>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultBanner;\n","import { useState, useEffect, useContext } from \"react\";\nimport Card from \"../../components/card\";\nimport ResultBanner from \"../../components/result-banner\";\nimport {\n  WON,\n  LOST,\n  TRANSFER_PROGRESS_PENDING,\n  TRANSFER_PROGRESS_NULL,\n} from \"../../constants\";\nimport { BrainGameContext } from \"../../context/BrainGameContext\";\n\nconst GameCardsContainer = ({\n  currenciesList,\n  gameStep,\n  showResult,\n  difficultyLevel,\n  gameRestart,\n}) => {\n  const [renderList, setRenderList] = useState([]);\n  const [userSelectedPair, setUserSelectedPair] = useState([]);\n  const [correctedPairs, setCorrectedPairs] = useState([]);\n\n  const { transferProgress } = useContext(BrainGameContext);\n\n  useEffect(() => {\n    if (gameStep !== 5) return;\n    if (transferProgress === TRANSFER_PROGRESS_PENDING && gameStep === 5) {\n      gameRestart();\n    }\n  }, [transferProgress, gameStep, gameRestart]);\n\n  useEffect(() => {\n    // 1. copy currencies list\n    let list = [];\n    currenciesList.forEach((currency) => {\n      const copy1 = {\n        id: `${currency.currencyName}-1`,\n        ...currency,\n      };\n      const copy2 = {\n        id: `${currency.currencyName}-2`,\n        ...currency,\n      };\n      list.push(copy1);\n      list.push(copy2);\n    });\n\n    // 2. shuffle\n    const shuffledList = list\n      .map((value) => ({ value, sort: Math.random() }))\n      .sort((a, b) => a.sort - b.sort)\n      .map(({ value }) => value);\n    setRenderList(shuffledList);\n  }, [currenciesList]);\n\n  useEffect(() => {\n    if (userSelectedPair.length === 2) {\n      // Check the pairs\n      const currencyOne = userSelectedPair[0].split(\"-\")[0];\n      const currencyTwo = userSelectedPair[1].split(\"-\")[0];\n\n      if (currencyOne === currencyTwo) {\n        setCorrectedPairs((prevState) => [...prevState, currencyOne]);\n      }\n\n      setTimeout(() => setUserSelectedPair([]), 800);\n    }\n  }, [userSelectedPair]);\n\n  useEffect(() => {\n    if (correctedPairs.length === 0 || currenciesList.length === 0) return;\n    if (correctedPairs.length === currenciesList.length) {\n      // Win!\n      showResult();\n    }\n  }, [correctedPairs, currenciesList, showResult]);\n  return (\n    <>\n      {renderList.map((currency) => (\n        <Card\n          key={currency.id}\n          id={currency.id}\n          currency={currency.currencyName}\n          isFliped={\n            gameStep === 3 ||\n            userSelectedPair.includes(currency.id) ||\n            correctedPairs.includes(currency.currencyName)\n          }\n          isDisabled={\n            gameStep === 3 ||\n            userSelectedPair.includes(currency.id) ||\n            userSelectedPair.length === 2 ||\n            gameStep === 5 ||\n            correctedPairs.includes(currency.currencyName)\n          }\n          onClickSelect={() =>\n            setUserSelectedPair([...userSelectedPair, currency.id])\n          }\n        />\n      ))}\n      {gameStep === 5 && transferProgress === TRANSFER_PROGRESS_NULL && (\n        <ResultBanner\n          result={correctedPairs.length === currenciesList.length ? WON : LOST}\n          difficultyLevel={difficultyLevel}\n        />\n      )}\n    </>\n  );\n};\n\nexport default GameCardsContainer;\n","import \"./game.css\";\nimport { useState, useContext } from \"react\";\n\nimport CountDown from \"../../components/count-down\";\nimport { getCurrenciesList } from \"../../helpers/currencies\";\nimport GameCardsContainer from \"../game-cards-container\";\nimport { TOKEN_REWARD } from \"../../constants\";\nimport { BrainGameContext } from \"../../context/BrainGameContext\";\n\nlet gameTimes = {\n  2: 3,\n  3: 10,\n  4: 60,\n  5: undefined,\n};\n\nlet difficultyLevelNumber = {\n  easy: 8,\n  medium: 12,\n  hard: 18,\n};\n\nconst Game = ({ stopGame }) => {\n  const [gameStep, setGameStep] = useState(1);\n  const [currenciesList, setCurrenciesList] = useState([]);\n  const [difficultyLevel, setDifficultyLevel] = useState(undefined);\n  const { gameReset } = useContext(BrainGameContext);\n\n  const selectDifficultyLevel = (e) => {\n    const level = e.target.getAttribute(\"data-difficulty-level\");\n    setGameStep(2);\n    setCurrenciesList(getCurrenciesList(difficultyLevelNumber[level]));\n    setDifficultyLevel(level);\n  };\n  const goToNextStep = () => {\n    setGameStep(gameStep + 1);\n  };\n\n  const showResult = () => {\n    setGameStep(5);\n  };\n\n  const gameRestart = () => {\n    gameReset();\n    stopGame();\n    setGameStep(1);\n  };\n\n  const renderHeading = () => {\n    switch (gameStep) {\n      case 1:\n        return \"1. Choose a level\";\n      case 3:\n        return \"2. Memorizing!\";\n      case 4:\n        return \"3. Find the pair match!\";\n      case 5:\n        return \"Result\";\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      <h2>{renderHeading()}</h2>\n      {gameStep === 1 && (\n        <div>\n          <button className=\"button--outline\" onClick={stopGame}>\n            Back to instructions\n          </button>\n          <p>There are three difficulty levels</p>\n          <ul>\n            <li>\n              {\" \"}\n              <p>\n                Easy : You will receive {TOKEN_REWARD.easy} token by winning.\n              </p>\n            </li>\n            <li>\n              <p>\n                Medium : You will receive {TOKEN_REWARD.medium} tokens by\n                winning.\n              </p>\n            </li>\n            <li>\n              <p>\n                Hard : You will receive {TOKEN_REWARD.hard} tokens by winning.\n              </p>\n            </li>\n          </ul>\n          <p>\n            You will be given 10 seconds to memorizing the location of each card\n          </p>\n          <p>Locate all pair matches within one mintue!</p>\n\n          <button\n            data-difficulty-level=\"easy\"\n            onClick={selectDifficultyLevel}\n            className=\"game__level-button\"\n          >\n            Easy\n          </button>\n          <button\n            className=\"game__level-button\"\n            data-difficulty-level=\"medium\"\n            onClick={selectDifficultyLevel}\n          >\n            Medium\n          </button>\n          <button\n            className=\"game__level-button\"\n            data-difficulty-level=\"hard\"\n            onClick={selectDifficultyLevel}\n          >\n            Hard\n          </button>\n          {/* <button\n            data-difficulty-level=\"nightmare\"\n            onClick={selectDifficultyLevel}\n          >\n            Nightmare\n          </button> */}\n        </div>\n      )}\n      {gameStep === 2 && (\n        <div className=\"game__modal-countdown\">\n          <div className=\"game__modal-countdown__content\">\n            <CountDown\n              countDown={3}\n              goToNextStep={goToNextStep}\n              shouldStopClock={false}\n              gameStep={gameStep}\n            />\n          </div>\n        </div>\n      )}\n      {gameStep >= 3 && (\n        <>\n          <p>\n            <CountDown\n              countDown={gameTimes[gameStep]}\n              goToNextStep={goToNextStep}\n              shouldStopClock={gameStep === 5}\n              gameStep={gameStep}\n              withText\n            />\n          </p>\n          <div className=\"game__cards-container\">\n            <GameCardsContainer\n              difficultyLevel={difficultyLevel}\n              currenciesList={currenciesList}\n              gameStep={gameStep}\n              showResult={showResult}\n              gameRestart={gameRestart}\n            />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Game;\n","import currenciesData from \"../data/currencies.json\";\n\nexport const getCurrenciesList = (numOfCurrencies) => {\n  let randomIds = [];\n  let drawedCurrencies = [];\n  let i = 0;\n  const totalNumOfCurrencies = currenciesData[\"crypto-currencies\"].length;\n  console.log(currenciesData);\n\n  do {\n    const drawedNumber = Math.floor(Math.random() * totalNumOfCurrencies - 1);\n    let isDrawedNumberExisted = randomIds.includes(drawedNumber);\n    if (!isDrawedNumberExisted) {\n      randomIds[i] = drawedNumber;\n      drawedCurrencies[i] = currenciesData[\"crypto-currencies\"][drawedNumber];\n      i++;\n    }\n  } while (randomIds.length < numOfCurrencies);\n\n  return drawedCurrencies;\n};\n","import \"./App.css\";\nimport { useState, useContext } from \"react\";\nimport { CONTENT_ABOUT, CONTENT_GAME } from \"./constants\";\nimport { BrainGameContext } from \"./context/BrainGameContext\";\n\nimport GameWidget from \"./widgets/game\";\n\nfunction App() {\n  const [content, setContent] = useState(CONTENT_ABOUT);\n  const {\n    warning,\n    hasMetaMask,\n    currentAccount,\n    connectMetaMask,\n    contractInstance,\n    isCorrectNetwork,\n    switchChainId,\n  } = useContext(BrainGameContext);\n\n  return (\n    <main className=\"container body__container\">\n      {content === CONTENT_ABOUT ? (\n        <>\n          <h1>Welcome to Brain Game</h1>\n          <h2>About Brain Game</h2>\n          <p>\n            Brain Game is a blockchain game, built with solidity, react js and\n            web3 developed by Irene K.\n          </p>\n          <p>You can earn Brain Token by beating the game.</p>\n          <h2>Instructions</h2>\n          <ul>\n            <li>\n              <p>\n                To play Brain Game, you have to connect your MetaMask Wallet.\n              </p>\n            </li>\n            <li>\n              <p>\n                Brain Game is built on Rinkeby Testnet, please ensure you have\n                connected to the right network\n              </p>\n            </li>\n            <li>\n              <p>\n                After each game, you will receive a certain amount of brain\n                token.\n              </p>\n            </li>\n            <li>\n              <p>\n                To receive brain token, you need to pay gas fee. If you do not\n                have Etherium in your wallet, consider going to this fauet to\n                get some.\n              </p>\n            </li>\n          </ul>\n          <button onClick={() => setContent(CONTENT_GAME)}>Start Now!</button>\n        </>\n      ) : (\n        <>\n          {warning && <p>{warning}</p>}\n          {hasMetaMask && currentAccount === undefined && (\n            <>\n              <p>You have connect wallet to start playing</p>\n              <button onClick={connectMetaMask}>Connect Wallet</button>\n            </>\n          )}\n          {currentAccount !== undefined &&\n            !contractInstance &&\n            !isCorrectNetwork && (\n              <>\n                <p>\n                  {\n                    \"Brain game use Rinkeby Test Network, please switch to Rinkeby Testnet\"\n                  }\n                </p>\n                <button onClick={switchChainId}>Switch to Rinkeby</button>\n              </>\n            )}\n          {currentAccount !== undefined && contractInstance && (\n            /* {userTokenBalance && <p>Your balance: {userTokenBalance}</p>} */\n            <GameWidget stopGame={() => setContent(CONTENT_ABOUT)} />\n          )}\n        </>\n      )}\n    </main>\n  );\n}\n\nexport default App;\n","import \"./navbar.css\";\nimport { useContext } from \"react\";\nimport BrainIcon from \"../brain-icon\";\nimport { BrainGameContext } from \"../../context/BrainGameContext\";\nimport Identicon from \"identicon.js\";\n\nconst NavBar = () => {\n  const {\n    currentAccount,\n    connectMetaMask,\n    userTokenBalance,\n    transferToken,\n  } = useContext(BrainGameContext);\n  return (\n    <nav className=\"navbar\">\n      <div className=\"container navbar__container\">\n        <div className=\"navbar__logo\">\n          <BrainIcon color=\"#f2aeb1\" /> <span>Brain Game</span>\n        </div>\n        <div className=\"navbar__user\">\n          {currentAccount ? (\n            <>\n              <div className=\"navbar__user__dropdown\">\n                <img\n                  className=\"ml-2\"\n                  width=\"30\"\n                  height=\"30\"\n                  src={`data:image/png;base64, ${new Identicon(\n                    currentAccount,\n                    30\n                  ).toString()}`}\n                  alt=\"\"\n                />{\" \"}\n                <span>\n                  {currentAccount.slice(0, 5) +\n                    \"...\" +\n                    currentAccount.slice(\n                      currentAccount.length - 5,\n                      currentAccount.length\n                    )}\n                </span>\n                <span className=\"divider-white\">|</span>\n                <span>\n                  Brain coin balance: <strong>{userTokenBalance}</strong>\n                </span>\n                {process.env.NODE_ENV === \"development\" && (\n                  <button onClick={() => transferToken(1)}>Get Token</button>\n                )}\n              </div>\n            </>\n          ) : (\n            <button onClick={connectMetaMask}>Connect Wallet</button>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import \"./footer.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container footer__container\">\n        <p>\n          Brain Game is developed by Irene K.\n          <br />\n          Icons attribution to\n        </p>\n        <p>Github:</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import \"./layout.css\";\n\nconst Layout = ({ children }) => {\n  return <div className=\"layout\">{children}</div>;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport NavBar from \"./components/nav-bar\";\nimport { BrainGameContextProvider } from \"./context/BrainGameContext\";\nimport Footer from \"./components/footer\";\nimport Layout from \"./components/layout\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrainGameContextProvider>\n      <Layout>\n        <NavBar />\n        <App />\n        <Footer />\n      </Layout>\n    </BrainGameContextProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}